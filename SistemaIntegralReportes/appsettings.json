{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },

  "AllowedHosts": "*",
  "ConnectionStrings": {
    "SqlTestConection": "data source=SQLTEST;initial catalog=SistemaIntegralReportes;user id=sa;password=mpx;",
    "UsuariosDataModelContext": "data source=SQLTEST;initial catalog=SistemaIntegralReportes;user id=sa;password=mpx;",
    "ReportesDbContext": "data source=SQLTEST;initial catalog=SistemaIntegralReportes;user id=sa;password=mpx;",
    "PerfilesDbContext": "data source=SQLTEST;initial catalog=SistemaIntegralReportes;user id=sa;password=mpx;",
    "GecosIntegrationService": "http://192.168.0.249:4477/",
    "InnovaConnectionString": "data source=192.168.0.16;initial catalog=innova_history;user id=sa;password=mpx",
    "InnovaProduccion": "data source=Innova2;initial catalog=Innova;user id=sa;password=mpx",
    "HpProduccion": "data source=hp;initial catalog=innova_history;user id=sa;password=mpx"
  },

  "ConfigurationParameters": {
    "GetConfigurationParametersByModulo": "select * from conf_parametros_reportes where moduloId = @moduloId and activo = 1",
    "InactivarReporteConfigurationParameter": "update conf_parametros_reportes set activo = 0 where id = @id",
    "DeleteReporteConfigurationParameter": "delete from conf_parametros_reportes where id = @id",
    "InsertReporteConfigurationParameter": "insert into conf_parametros_reportes (reporteId, moduloId, nombre, valor, activo) values (@reporteId, @moduloId, '@nombre', '@valor', 1)",
    "ActivarReporteConfigurationParameter": "update conf_parametros_reportes set activo = 1 where id = @id",
    "GetParametrosSeccionAbasto": "SELECT * FROM conf_dw_abasto"
  },

  "SENDGRID_API_KEY": "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",
  "SENDGRID_FROM": "flpdevelopement@gmail.com",
  "SENDGRID_NAME": "COMPUTOS FLP",

  "CajaBovina": "select     paquete.extcode as 'CodigoExterno',     producto.code as Codigo,     producto.name as 'Producto',     round(sum(paquete.weight),2) as 'Peso',     sum(paquete.pieces) as 'Piezas',     case      when producto.customercode not like ('') then producto.customercode      else 'OTRO'     end as 'Destino',     convert(varchar, paquete.prday,5) as 'FechaProduccion',     convert(varchar, paquete.expire3, 5) as 'FechaFaena',     convert(varchar, paquete.expire1, 5) as 'FechaVencimiento',     case       when producto.condition in (3, 7, 9, 11, 13, 15) then 'D'      else 'T'     end as 'Tipo'    from proc_packs paquete     Inner Join proc_materials producto ON paquete.material = producto.material    where      paquete.extcode = '@id'     and paquete.regtime between GETDATE()-730 AND GETDATE()     and paquete.rtype = 1    GROUP BY       paquete.prday,     paquete.expire3,     paquete.expire1,     producto.code, producto.name,      producto.customercode,      paquete.extcode,     producto.condition    ORDER BY      paquete.extcode,      producto.name",
  "Categoria": "select p.description3 from proc_materials p where p.code = '@codigo'",
  "Destino": "select p.customercode from proc_materials p where p.code = '@codigo'",
  "Condition": "select p.condition from proc_materials p where p.code = '@codigo'",
  "TipoCuarto": "select     case       when condition in (3, 7, 9, 11, 13, 15) then 'D'      else 'T'     end    from      proc_materials    where     code = '@codigo'",
  "Registros": "select codigo_externo from Registros",
  "UpdateInfo": "update      Registros    set     fecha_produccion = convert(varchar, '@fechaProduccion', 3),     fecha_faena = convert(varchar, '@fechaFaena', 3),     destino = '@destino',     tropa = '@tropa',     letra = '@letra',     registro = getdate()    where     codigo_externo = '@codigoExterno'",
  "FechasFaena": "select      fecha_produccion,      fecha_faena,      delantero,      trasero,      cuota_del,      cuota_tra      from      Produccion     where      fecha_produccion = convert(varchar,'@fechaProduccion', 3)",
  "DatosProgramaProduccion": "select distinct      p.fecha_faena,      p.fecha_desosado,      p.tropa,      p.delanteros,     p.traseros,       f.tipo    from Programas p     inner join Faena f     on p.tropa = f.tropa and f.fecha_faena = p.fecha_faena    where      fecha_desosado = convert(varchar,'@fechaProduccion',3)    order by      fecha_faena",
  "FechaFaenaCuota": "select top 1      fecha_faena     from      Produccion     where      fecha_produccion = convert(varchar, '@fechaProduccion',3) and      @tipoCuarto = 1",
  "FechaFaenaCasa": "select top 1      fecha_faena     from      Produccion     where      fecha_produccion = convert(varchar, '@fechaProduccion',3) and      @tipoCuarto = 1",
  "NumeroTropaFaenaYProduccionCasa": "select top 1      p.tropa    from      Programas p     inner join Faena f on p.tropa = f.tropa     inner join Produccion pr on p.fecha_desosado = pr.fecha_produccion    where      p.fecha_desosado = convert(varchar, '@fechaProduccion', 3) and      p.fecha_faena = f.fecha_faena and     p.fecha_faena = convert(varchar, '@fechaFaena', 3) and      @tipoCuarto > 0 --and      --(f.tipo = '' or f.tipo='F')     order by      p.tropa asc",
  "NumeroTropaFaenaYProduccionCuota": "select top 1      p.tropa    from      Programas p     inner join Faena f on p.tropa = f.tropa     inner join Produccion pr on p.fecha_desosado = pr.fecha_produccion    where      p.fecha_desosado = convert(varchar, '@fechaProduccion', 3) and      p.fecha_faena = f.fecha_faena and     p.fecha_faena = convert(varchar, '@fechaFaena', 3) and      @tipoCuarto > 0 and      (f.tipo = '@tipoLetra' or f.tipo='F')     order by      p.tropa asc",
  "LetraTipo": "select      tropa     from      Faena    where      fecha_faena = convert(varchar, '@fechaFaena',3) and      inicio @rangoOrdinal fin",
  "InsertarRegistro": "insert into Registros values     ('@codigoExterno', '@producto', '@codigo', convert(varchar, '@fechaProduccion', 3), convert(varchar, '@fechaFaena', 3), '@destino', '@tropa', GETDATE() , '@letra')",
  "CajaEnRegistro": "select     *    from     Registros    where     codigo_externo = '@codigoExterno'",
  "TropaParaOrdinal": "select     tropa    from     Faena    where      fecha_faena = convert(varchar,'@fechaFaena',3) and     @stringOrdinal",
  "FechaFaenaDesosado1": "select top 1        fecha_faena       from        Produccion       where        fecha_produccion = convert(varchar, '@fechaProduccion',3) and        @tipoCuarto = 1",
  "SalidaMarel": "select sum(pk.nregs) as cajas, sum(pk.pieces) as piezas, sum(pk.weight) as kilos from proc_packs pk join proc_prperiods prp on prp.prperiod = pk.sprperiod left outer join proc_materials mat on mat.material = pk.material where pk.rtype in (1,6,12) and prp.prday between convert(datetime, @startingTime, 112) and convert(datetime, @endTime, 112) and prp.prunit in (29,31,34,36)",
  "EntradaMarel": "SELECT CASE WHEN procesor.name LIKE '%PISTOLA%' OR procesor.name LIKE '%TRASERO%' THEN 'TRASEROS' ELSE 'DELANTEROS' END AS 'Tipo', COUNT(cuartos.id) as 'Cuartos', ROUND(SUM(cuartos.weight),2) as 'PesoCuartos' FROM proc_items cuartos INNER JOIN proc_materials producto ON cuartos.material = producto.material INNER JOIN proc_lots lote ON cuartos.lot = lote.lot INNER JOIN base_companies procesor ON procesor.company = lote.processor2 LEFT JOIN proc_conditions tipoEntrada ON tipoEntrada.condition = producto.condition WHERE (cuartos.prday BETWEEN @fechaDesde AND @fechaHasta AND producto.systemtype = 4 AND cuartos.rtype = 1) OR (cuartos.prday BETWEEN @fechaDesde AND @fechaHasta AND cuartos.rtype = 4 AND producto.code = 'IRH001') GROUP BY CASE WHEN procesor.name LIKE '%PISTOLA%' OR procesor.name LIKE '%TRASERO%' THEN 'TRASEROS' ELSE 'DELANTEROS' END ORDER BY 'Tipo' DESC",
  "FuncionariosLogueados": "pivot_Empleado_PorLinea",
  "DwHistoricoFuncionariosLogueados": "select * from dw_hr_login_historico where Fecha between convert(datetime, '@fechaDesde', 112) and convert(datetime, '@fechaHasta', 112) order by NombreEstacion asc",
  "HorarioFuncionario": "SELECT    t.employee as employee,    e.name as empname, e.code as empcode,    CONVERT(DATETIME, FLOOR(CONVERT(FLOAT, t.begtime))) as date,    t.station as station,    s.name as stationname,    t.begtime as login,    t.endtime as logout,    (isnull(t.endtime,getdate()) - t.begtime) as hours FROM    proc_timeregc t    JOIN base_employees e ON t.employee = e.employee    JOIN proc_stations s ON t.station = s.station WHERE    t.rtype = 1  AND e.code in ('@numeroFunc') AND t.begtime BETWEEN CONVERT(datetime, '@fechaDesde' ,112) AND CONVERT(datetime, '@fechaHasta', 112) GROUP BY    t.employee,    e.name, e.code,    e.description1,    e.extcode,    t.station,    s.name,    t.begtime,    t.endtime ORDER BY    e.name, e.code,    e.description1,    e.extcode,    t.employee,    t.begtime,    t.endtime,    s.name,    t.station ",
  "PadronFuncionarios": "select * from hr_conf_padron_funcionarios",
  "InsertarPadronFuncionarios": "INSERT INTO hr_conf_padron_funcionarios values (@nroFunc, @apellidos, @nombres, @sector, @tipoRemuneracion, @horasTrabajadas, @diasTrabajados, getdate())",
  "EliminarPadronFuncionarios": "delete from hr_conf_padron_funcionarios",
  "Empleados": "select code, name from base_employees order by name asc",
  "Regimen": "select * from hr_conf_regimen",
  "ConfHoras": "select * from  hr_conf_horas",
  "HorariosDesfasados": "select * from hr_funcionarios_horario_desfasado order by nroFuncionario asc",
  "EliminarHorariosDesfasados": "delete from hr_funcionarios_horario_desfasado",
  "InsertarHorariosDesfasados": "insert into hr_funcionarios_horario_desfasado values (@nroFunc)",

  "Accesos": {
    "AccesosReportes": "select a.idReporte, r.nombre_reporte from conf_accesos_reportes a inner join conf_reportes r on r.id_reporte = a.idReporte where idUsuario = @idUsuario and permitido = 1"
  },

  "CambiarContrasenia": "update conf_usuarios set contrasenia = '@contrasenia' where id_usuario = @idUsuario",

  "DetalleEntrada": "exec  desosadoMarelDashSIR_LotesEntrada '@fechaDesde', '@fechaHasta'",
  "DetalleCharqueadores": "exec  desosadoMarelDashApp_Charqueadores '@fechaDesde', '@fechaHasta'",
  "DetalleHueseros": "exec desosadoMarelDashApp_Hueseros '@fechaDesde', '@fechaHasta'",
  "DetalleEmpaque": "exec  desosadoMarelDashApp_Empaque '@fechaDesde', '@fechaHasta'",
  "DWDetalleEntrada": "select * from dw_dash_desosado_lotes_entrada",
  "DWDetalleCharqueadores": "select * from dw_dash_desosado_detalle_charqueadores",
  "DWDetalleHueseros": "select * from dw_dash_desosado_detalle_hueseros",
  "DWDetalleEmpaquePrimario": "select * from dw_dash_desosado_empaque_primario",
  "DWDeleteDetalleEntrada": "delete from dw_dash_desosado_lotes_entrada",
  "DWDeleteDetalleCharqueadores": "delete from dw_dash_desosado_detalle_charqueadores",
  "DWDeleteDetalleHueseros": "delete from dw_dash_desosado_detalle_hueseros",
  "DWDeleteDetalleEmpaquePrimario": "delete from dw_dash_desosado_empaque_primario",
  "DWUptadeDetalleEntrada": "insert into dw_dash_desosado_lotes_entrada (tipoEntrada, codigo, producto, cuartos, pesoCuartos, promedio, horaPrimerCuarto, horaUltimoCuarto) values (@tipoEntrada, @codigo, @producto, @cuartos, @pesoCuartos, @promedio, @horaPrimerCuarto, @horaUltimoCuarto)",
  "DWUptadeDetalleCharqueadores": "insert into dw_dash_desosado_detalle_charqueadores (linea, nombreEstacion, idEstacion, charqNum, charqueador, cortesRecibidos, cortesEnviados, kgRecibidos, kgEnviados, porcRendimiento, procRendPromedio, promedioKilosSalidaCharqueador) values (@linea, @nombreEstacion, @idEstacion, @charqNum, @charqueador, @cortesRecibidos, @cortesEnviados, @kgRecibidos, @kgEnviados, @porcRendimiento, @procRendPromedio, @promedioKilosSalidaCharqueador)",
  "DWUptadeDetalleHueseros": "insert into dw_dash_desosado_detalle_hueseros (linea, idEstacion, nombreEstación, hueseroCod, huesero, cuartos, kgRecibidos, kgEnviados, rend) values (@linea, @idEstacion, @nombreEstación, @hueseroCod, @huesero, @cuartos, @kgRecibidos, @kgEnviados, @rend)",
  "DWUptadeDetalleEmpaquePrimario": "insert into dw_dash_desosado_empaque_primario (station, puesto, cortes, peso) values (@station, @puesto, @cortes, @peso)",
  "RefreshTimeInterval": 120000,

  "DashboardEmpaqueSecundario": {
    "SqlQueryCortesCajas": "select CASE WHEN st.name is null THEN 'TMS' ELSE st.name END as 'Station',Count(pack.id) as Cajas,SUM(pack.pieces) as Cortes, ROUND(SUM(pack.weight ),0) as Peso from proc_packs pack inner join proc_stations st On ST.station = pack.station where @filter AND pack.rtype = 1 AND pack.status in(3,1) group by  st.name",
    "SqlQueryCajasAbiertas": "select STR(Count(pack.id)) as cantidad from proc_packs pack inner join proc_stations st On ST.station = pack.station where  @filter  AND pack.rtype = 1 AND pack.status = 1",
    "SqlQueryCajasCerradas": "select STR(COUNT(pack.id )) as cantidad, STR(sum(pack.pieces)) as piezas from proc_packs pack where @filter AND pack.prunit = 29  AND pack.rtype = 1 AND pack.status = 3",
    "SqlQueryCajasPorFecha": "select COUNT(pack.id ) as Cantidad, min(pack.regtime) as Fecha, ROUND(CONVERT(float,SUM(pack.weight)),0) as Kilos  from proc_packs pack where @filter AND pack.rtype = 1 AND pack.status = 3 and pack.prunit = 29",
    "SqlQueryCortesCajasXLinea": "select substring(st.name,0,6) as 'Station' ,Count(pack.id) as Cajas,SUM(pack.pieces) as Cortes, ROUND(SUM(pack.weight ),0) as Peso from proc_packs pack inner join proc_stations st On ST.station = pack.station where @filter AND pack.rtype = 1 AND pack.status in(3,1) group by  substring(st.name,0,6)",
    "SqlQueryCortesSinEmpacar": "select STR(COUNT(item.id )) as CortesSinEmpacar, ROUND(SUM(item.weight ),0) as PesoCortesSinEmpacar from proc_items item inner join proc_prunits pu On pu.prunit = item.prunit where @filter  and item.prunit in (5,7,9,11,13) and item.weight > 0 and item.pack is null and item.layout is not null AND item.rtype = 1",
    "SqlQueryCajasTMSCerradas": "select STR(Count(pack.id)) as Cajas, STR(ROUND(SUM(pack.weight ),0)) as Peso from proc_packs pack where  @filter  AND pack.rtype = 1 AND pack.status = 3  and pack.prunit = 34",
    "SqlQueryEstacionesProceso": "select dspo.device as idStation, dspo.name station, COUNT(pack.id ) as cajas from proc_packs pack inner join proc_prunits prunit ON prunit.prunit = pack.prunit inner join base_devices dspo ON pack.device = dspo.device where @filter AND pack.rtype = 1 AND pack.status = 3 and prunit.prunit = 29 group by dspo.device, prunit.name, dspo.name",
    "SqlQueryFechaPrimerCaja": "select min(pack.regtime) primerCaja from proc_packs pack where   @filter AND pack.rtype = 1 AND pack.status = 3 and pack.prunit = 29",
    "SqlQueryFechaUltimaCaja": "select max(pack.regtime) ultimaCaja from proc_packs pack where   @filter AND pack.rtype = 1 AND pack.status = 3 and pack.prunit = 29",
    "SqlQueryKilosTotales": "select STR(ROUND(sum(pack.weight),0)) as kilos from proc_packs pack where @filter AND pack.prunit in ( 29, 34)   AND pack.rtype = 1 AND pack.status = 3",
    "SqlQueryProductStation": "select producto.code as CodProd, producto.shname as Producto ,Count(pack.id) as Cajas,SUM(pack.pieces) as Cortes, ROUND(SUM(pack.weight ),0) as Peso from proc_packs pack inner join proc_stations st On ST.station = pack.station inner join proc_materials producto On producto.material = pack.material where @filter AND pack.rtype = 1 AND pack.status in(3,1) AND @station group by st.name, producto.code, producto.shname",
    "IdDeviceOCM1": "4296",
    "IdDeviceOCM2": "0",
    "IdDeviceOCM3": "4293",
    "IdDeviceReproceso1": "298",
    "IdDeviceReproceso2": "300",
    "IdDeviceReproceso3": "4256",
    "RefreshTimeInterval": 120000,
    "GetTiemposActualizacion": "select * from conf_dash_empaque_secundario_tiempo_actualizacion where activo = 1 order by valor asc",
    "HoraPrimeraCajaWPL": "select min(pack.regtime) primerCaja from proc_packs pack inner join base_devices dspo ON pack.device = dspo.device where  pack.prday =  '@dateFilter' AND pack.rtype = 1 AND pack.status = 3 and pack.prunit = 29 and dspo.device = @idDevice",
    "HoraUltimaCajaWPL": "select max(pack.regtime) primerCaja from proc_packs pack inner join base_devices dspo ON pack.device = dspo.device where   pack.prday =  '@dateFilter' AND pack.rtype = 1 AND pack.status = 3 and pack.prunit = 29 and dspo.device = @idDevice"
  },


  "ControlCalidad": {
    "InsertarRechazoPH": "insert into dw_qa_rechazo_ph (ordinalNro, fechaFaena) values (@ordinalNro, '@fechaFaena')",
    "ConsultarTrazabilidadDeCorte": "EXEC [dbo].[pivot_FullTraceCut] @cutNumber = @codigoQr",
    "ConsultarTipoDeIncidente": "SELECT * FROM calidad_tipo_de_incidentes",
    "InsertarIncidente": "INSERT INTO calidad_registro_de_incidentes (codigoQr, puestoDeTrabajo, codigoDeEmpleado, nombreDeEmpleado, producto, hora, idTipoDeIncidente, imagenDeIncidente) OUTPUT INSERTED.* VALUES (@codigoQr, @puestoDeTrabajo, @codigoDeEmpleado, @nombreDeEmpleado, @producto, @hora, @idTipoDeIncidente, @imagenDeIncidente)",
    "ListaDeIncidentes": "SELECT * FROM calidad_registro_de_incidentes inci INNER JOIN calidad_tipo_de_incidentes tipo on tipo.idTipoDeIncidente = inci.idTipoDeIncidente WHERE fechaDeRegistro >= @FechaDesde and fechaDeRegistro <= @FechaHasta"
  },

  "DWCajas": {
    "SelectDWCajas": "select * from dw_cajas where fechaProducido between '@fechaProducidoDesde' and '@fechaProducidoHasta'"
  },

  "Mantenimiento": {
    "CabezasFaenadas": "declare @minId int select @minId = min(excode) from proc_individuals where slday between convert(varchar, '@fechaFaenaDesde', 112) and convert(varchar, '@fechaFaenaHasta', 112) and regtime between '@fechaFaenaDesde' + ' 01:00:00'  and '@fechaFaenaDesde' + ' 04:00:00' select id as IdInnova, excode as IdGecos, CONVERT(date,slday,112) FechaFaena, idcode as Proveedor, slcode as Secuencial,replace('8580000' + str(killnumber), ' ','') as Caravana, description8 as DotNumber, gweight as PesoEnPie, oweight as PesoMedia , case when excode >= @minId then DATEADD(hour, 12, regtime) else regtime end as FechaHoraEtiquetado from proc_individuals where slday between convert(varchar, '@fechaFaenaDesde', 112) and convert(varchar, '@fechaFaenaHasta', 112) and gweight > 0 order by excode asc",
    "TemperaturaC9C10": "select iddispositivo,codigoDispositivo,unidadMedida,Valor,fecharegistro  from v_dw_scada where iddispositivo in (428, 671) and convert(date,FechaRegistro,112) between '@fechaDesde' and '@fechaHasta' order by FechaRegistro asc"
  },

  "Ingenieria": {
    "GetDatosScada": "select * from ing_scada",
    "GetDatosScadaPorDispositivo": "select * from ing_scada where idTipoDispositivo = @idTipoDispositivo",
    "GetDatosScadaPorUbicacion": "select * from ing_scada where idUbicacion = @idUbicacion",
    "GetDatosScadaPorDispositivoYUbicacion": "select * from ing_scada where idTipoDispositivo = @idTipoDispositivo and idUbicacion = @idUbicacion",
    "GetTiposDispositivoScada": "select * from ing_tipo_dispositivo",
    "GetUbicacionDispositivosScada": "select * from ing_ubicacion",
    "GetUnidadesMedida": "select * from ing_unidad_medida",
    "InsertTipoDispositivo": "insert into ing_tipo_dispositivo values (@tipo)",
    "InsertUbicaion": "insert into ing_ubicacion values (@idUP, @nombre, @desc)",
    "InsertUnidadesMedida": "insert into ing_unidad_medida values (@codigo, @nombre)",
    "UpdateDatosScada": "update ing_scada set idTipoDispositivo = @idT, idUbicacion = @idU, idUnidadMedida = @idUM, nombre = @nombre, descripcion = @desc where id = @id",
    "UpdateTipoDispositivo": "update ing_tipo_dispositivo set nombre = @nombre where idTipo = @id",
    "UpdateUbicacion": "update ing_ubicacion set idUbicacionPadre = @idUP, nombre = @nombre, descripcion = @desc where idUbicacion = @id",
    "UpdateUnidadesMedida": "update ing_unidad_medida set codigo = @codigo, nombre = @nombre where idUnidadMedida = @idUM",
    "DeleteTipoDispositivo": "delete from ing_tipo_dispositivo where idTipo = @id",
    "DeleteUbicacion": "delete from ing_ubicacion where idUbicacion = @idU",
    "DeleteUnidadesMedida": "delete from ing_unidad_medida where idUnidadMedida = @idUM"
  },

  "Exportaciones": {
    "GetContainers": "select distinct id_carga, container from dw_expo_carga where container <> '' order by container asc",
    "GetDataByContainer": "select * from dw_expo_carga where id_carga in (@idCarga) and container in (@filter)",
    "GetPreciosPorFechas": "select * from conf_precios where fecha_produccion between convert(varchar, '@fechaDesde', 112) and convert(varchar, '@fechaHasta', 112)",
    "GetPrecios": "select * from conf_precios",
    "GetTiposMoneda": "select * from conf_moneda order by nombre asc",
    "DeleteListaPrecios": "delete from conf_precios where fecha_produccion = convert(varchar, '@fecha', 112)",
    "InsertListaPrecios": "insert into conf_precios values (@fecha_produccion, @codigo_producto, @precio_tonelada, @fecha_registro, @id_usuario, @id_moneda)",
    "GetFechas": "select distinct fecha_produccion from conf_precios order by fecha_produccion asc",
    "GetDWCajasCarga": "select * from v_dw_cajas_carga where id_carga in (@idCarga) and container in (@filter)",
    "GetConfProductos": "select distinct cp.codigoProducto, dw.nomProducto, cp.codigoKosher, cp.clasificacionKosher, cp.markKosher, cp.especie, cp.tipoProducto from conf_productos cp inner join dw_cajas dw on dw.codProducto = cp.codigoProducto @filter order by cp.codigoProducto asc",
    "DeleteConfProductos": "delete from conf_productos where codigoProducto = @codigoProducto",
    "UpdateConfProductos": "update conf_productos set codigoKosher = @codigoKosher, clasificacionKosher = @clasificacionKosher, markKosher = @markKosher, especie = @especie, tipoProducto = @tipoProducto where codigoProducto = @codigoProducto",
    "InsertConfProductos": "insert into conf_productos (codigoProducto, codigoKosher, clasificacionKosher, markKosher, especie, tipoProducto) values (@codigoProducto, @codigoKosher, @clasificacionKosher, @markKosher, @especie, @tipoProducto)",
    "GetNombreProducto": "select name from proc_materials where code = '@codigo'",
    "UpdateCodigoPrecio": "update conf_precios set precio_tonelada = @precioTonelada where codigo_producto = @codigoProducto and fecha_produccion = @fechaProduccion",
    "GetCodigoPrecioFecha": "select precio_tonelada from conf_precios where codigo_producto = '@codigoProducto' and fecha_produccion = '@fechaProduccion'",
    "GetConfiguracionPrdoductoKosher": "select distinct * from conf_productos",
    "GetPrimeraFechaPrecios": "select top 1 fecha_produccion from conf_precios where fecha_produccion <= convert(varchar, '@fecha_dada', 112) order by fecha_produccion desc",
    "GetIdMonedaParaFecha": "select top 1 id_moneda from conf_precios where fecha_produccion = CONVERT(varchar, '@fecha', 1);"
  },

  "StockCajas": {
    "GetTiposCajas": "select * from sc_tipo where estado = 1",
    "GetTamanos": "select * from sc_tamano where estado = 1",
    "GetStock": "select * from sc_stock",
    "GetPedidos": "select * from sc_pedido where estado = 1",
    "GetPedidosPadre": "select * from sc_pedido_padre",
    "GetOrdenesEntrega": "select o.id_pedido, o.cajas_a_entregar, o.cajas_entregadas from sc_orden_entrega o inner join sc_pedido p on p.id_pedido = o.id_pedido where p.estado = @estado",
    "GetOrdenesArmado": "select o.id_pedido, o.cajas_a_armar, o.cajas_armadas, o.Id_destino from sc_orden_armado o inner join sc_pedido p on p.id_pedido = o.id_pedido where p.estado = @estado",
    "GetDisenos": "select * from sc_diseno where estado = 1",
    "GetCajas": "select * from sc_caja",
    "InsertPedido": "insert into sc_pedido (id_caja, fecha_pedido, prioridad, stock_pedido, para_stock, estado, id_pedido_padre) values (@idCaja, @fecha, @prioridad, @stockPedido, @paraStock, @estado, @idPedidoPadre); select scope_identity();",
    "InsertOrdenArmado": "insert into sc_orden_armado (id_pedido, cajas_a_armar, cajas_armadas, Id_destino) values (@idPedido, @cajasArmar, @cajasArmada, @idDestino)",
    "InsertOrdenEntrega": "insert into sc_orden_entrega (id_pedido, cajas_a_entregar, cajas_entregadas) values (@idPedido, @cajasEntregar, @cajasEntregadas)",
    "InsertPedidoPadre": "insert into sc_pedido_padre (prioridad_pedido_padre) values (@prioridad); select scope_identity()",
    "UpdateOrdenArmadoCajasArmadas": "update sc_orden_armado set cajas_armadas = @cajasArmadas where id_pedido = @idPedido",
    "UpdateOrdenArmado": "update sc_orden_armado set cajas_a_armar = @cajasArmar, cajas_armadas = @cajasArmadas where id_pedido = @idPedido",
    "UpdateOrdenEntregaCajasEntregadas": "update sc_orden_entrega set cajas_entregadas = @cajasEntregadas where id_pedido = @idPedido",
    "UpdateOrdenEntrega": "update sc_orden_entrega set cajas_a_entregar = @cajasEntregar,  cajas_entregadas = @cajasEntregadas where id_pedido = @idPedido",
    "UpdateStock": "update sc_stock set stock = @stock where id_caja = @idCaja",
    "UpdatePedido": "update sc_pedido set id_caja = @idCaja, fecha_pedido = @fechaPedido, prioridad = @prioridad, stock_pedido = @stockPedido, para_stock = @paraStock, estado = @estado, id_pedido_padre = @idPedidoPadre where id_pedido = @idPedido",
    "UpdatePrioridadPedido": "update sc_pedido set prioridad = @prioridad where id_pedido = @idPedido",
    "UpdatePedidoPadre": "update sc_pedido_padre set prioridad_pedido_padre = @prioridad where id_pedido_padre = @idPedidoPadre",
    "DeletePedido": "update sc_pedido set estado = 0 where id_pedido = @idPedido"
  },


  "Dispositivos": {
    "GetDispositivos": "select * from cc_dispositivos where id_dispositivo = @idDispositivo",
    "CreateDispositivos": "INSERT INTO cc_dispositivos (nombre, ip, puerto, descripcion, activo, id_tipo, id_ubicacion, id_formato) values (@nombreDeDispositivo, @ipDispositivo, @puertoDispositivo, @descripcionDispositivo, @estadoDispositivo, @idTipoDispositivo, @idUbicacionDispositivo, @idFormatoDispositivo )",
    "DeleteDispositivo": "DELETE cc_dispositivos where id_dispositivo = @idDispositivo",
    "UpdateDispositivo": "UPDATE cc_dispositivos SET nombre = @nombreDeDispositivo, ip = @ipDispositivo , puerto = @puertoDispositivo, descripcion = @descripcionDispositivo, activo = @estadoDispositivo, id_tipo = @idTipoDispositivo, id_ubicacion = @idUbicacionDispositivo , id_formato = @idFormatoDispositivo where id_dispositivo = @idDispositivo",
    "ReporteDeLecturas": "select \r\nl.fecha_hora AS Fecha,\r\nd .nombre AS Dispositivo,\r\nu.nombre AS Ubicacion,\r\nl.mensaje AS Lectura, \r\nTRY_PARSE(SUBSTRING(l.mensaje, 2, (LEN(l.mensaje) - 1)) AS bigint) AS IdCaja\r\nFROM dbo.cc_lecturas l \r\nINNER JOIN dbo.cc_dispositivos d ON d .id_dispositivo = l.id_dispositivo\r\nINNER JOIN dbo.cc_ubicaciones u ON u.id_ubicacion = d .id_ubicacion \r\nwhere SUBSTRING(mensaje, 4, LEN(mensaje)) = @cajaBuscada;",
    "ReporteDeLecturasExpo": "select top 100 \r\nexportdate,\r\n'Palletizado',\r\n'Palletizado',\r\ncontainer,\r\nid_pallet\r\nfrom dw_expo_carga where SUBSTRING(boxid, 3, len(boxid)) = @palletExpo",
    "LecturasConError": "SELECT * FROM Vis_Lecturas_De_Cajas_Con_Error"
  },

  "ReportesMerma": {
    "ReporteMermaPorFecha": "EXEC Merma_De_Peso_Por_Fecha_Test @fechaDesde, @fechaHasta"
  },

  "SeccionAbasto": {
    "LecturasDeAbasto": "SELECT * FROM dw_prod_abasto WHERE fechaDeRegistro >= @fechaHoraDesde and fechaDeRegistro <= @fechaHoraHasta",
    "InsertarLecturasDW_Prod_Abasto": "INSERT INTO dw_prod_abasto (lecturaDeMedia, idAnimal, secuencial, operacion, peso, fechaDeFaena, usuarioLogueado ) VALUES (@lecturaDeMedia, @idAnimal, @secuencial, @operacion, @peso, @fechaDeFaena, @usuarioLogueado)",
    "LecturasDeStockAbasto": "EXEC SP_Prod_Abasto",
    "BuscarCodigoQr": "SELECT TOP 1 * FROM dw_prod_abasto WHERE lecturaDeMedia LIKE @codigoQr ",
    "ReporteDeMediasProducto": "SELECT producto.name AS Producto, grade.name AS Grade, COUNT(cuarto.id) AS Cuartos, ROUND(SUM(cuarto.weight), 1) AS PesoCuartos FROM proc_items cuarto INNER JOIN proc_materials producto ON producto.material = cuarto.material INNER JOIN proc_qamarks grade ON grade.qamark = cuarto.qamark INNER JOIN proc_individuals animal ON cuarto.individual = animal.id WHERE cuarto.regtime BETWEEN @fechaDesde AND @fechaHasta GROUP BY grade.name, producto.name ORDER BY producto.name, grade.name",
    "ReporteDeMediasProveedor": "select animal.idcode as Proveedor, animal.slcode as Tropa, grade.name as Grade, count(animal.id) as Medias, Round(sum(animal.cweight),1) as PesoMedias from proc_individuals animal inner join (select  distinct cuarto.individual from proc_items cuarto where cuarto.extcode like '15%' and cuarto.regtime between @fechaDesde and @fechaHasta ) ani ON animal.id = ani.individual inner join proc_qamarks grade on grade.qamark = animal.qamark1 group by animal.idcode, animal.slcode, grade.name",
    "ReporteDeMediasGrade": "select grade.name as Grade, count(animal.id) as Medias, Round(sum(animal.cweight),1) as PesoMedias from proc_individuals animal inner join (select distinct cuarto.individual from proc_items cuarto where cuarto.extcode like '15%' and cuarto.regtime between @fechaDesde and @fechaHasta) ani ON animal.id = ani.individual inner join proc_qamarks grade on grade.qamark = animal.qamark1 group by grade.name",
    "EliminarLecturaDeAbasto": "DELETE dw_prod_abasto WHERE idAnimal = @IdAnimal"
  },

  "SeccionCajasAndroid": {
    "IdentificadorDeCajas": "EXEC SP_Identificador_DeCajas @codigoDeCaja"
  },

  "ReporteCuota": {
    "EntradaPorLotesYFechas": "exec SIR_EntradaPorLotesYFechas @fechaProduccionDesde, @fechaProduccionHasta, @lotesStr",
    "CajasPorLoteYFecha": "exec SIR_CajasPorLoteYFecha @fechaProduccion, @lotes",
    "GetConfTipoCuota": "select * from conf_tipo_cuota",
    "GetConfReporteCuota": "select tc.id as idtipo, rc.lote, rc.activo from conf_tipo_cuota tc inner join conf_reporte_cuota rc on rc.idTipo = tc.id",
    "GetLotes": "select lot, name from proc_lots where lot in (@lotes)",
    "GetQamarks": "select q.qamark, q.name from proc_qamarks q",
    "DWEntradaPorLotesYFechas": "select * from dw_entrada_produccion where fecha between @fechaDesde and @fechaHasta and lote in (@lotes)",
    "DWCortesPorLoteYFecha": "select distinct * from dw_cortes_produccion where fecha between @fechaDesde and @fechaHasta and lote in (@lotes)",
    "DWCajasPorFechaYTipo": "select distinct * from dw_salida_produccion where fecha between @fechaDesde and @fechaHasta and cajas > 1",
    "SelecionarUltimaFecha": "select top 1 fecha from dw_entrada_produccion order by fecha desc",
    "InsertarDatosEnDW": "exec SIR_Entrada_Cortes_Cajas_Produccion"
  },

  "DashboardPantallaPrincipal": {
    "AnimalesFaenados": "select * from dw_animales_faenados order by slday asc;",
    "AnimalesGradeYear": "select * from dw_animales_por_grade order by year asc, gradeId asc;"
  },

  "FichaTecnica": {

    "FtListaDeFichasTecnicas": "SELECT * FROM prod_ficha_tecnica_test",
    "FtCrearFichaTecnica": "INSERT INTO prod_ficha_tecnica_test (codigoDeProducto, descripcionDeProducto, nombreDeProducto, descripcionLargaDeProducto, marca, destino, tipoDeUso, alergeno, condicionAlmacenamiento, vidaUtil, tipoDeEnvase, presentacionDeEnvase, pesoPromedio, unidadesPorCaja, dimensiones, idioma, grasaVisible, espesorCobertura, ganglios, hematomas, huesosCartilagos, elementosExtranos, color, olor, ph, aerobiosMesofilosTotales, enterobacterias, stec0157, stecNo0157, salmonella, estafilococos, pseudomonas, escherichiaColi, coliformesTotales, coliformesFecales, observacion, elaboradoPor, aprobadoPor, fechaCreacion) VALUES (@codigoDeProducto, @descripcionDeProducto, @nombreDeProducto, @descripcionLargaDeProducto, @marca, @destino, @tipoDeUso, @alergeno, @condicionAlmacenamiento, @vidaUtil, @tipoDeEnvase, @presentacionDeEnvase, @pesoPromedio, @unidadesPorCaja, @dimensiones, @idioma, @grasaVisible, @espesorCobertura, @ganglios, @hematomas, @huesosCartilagos, @elementosExtranos, @color, @olor, @ph, @aerobiosMesofilosTotales, @enterobacterias, @stec0157, @stecNo0157, @salmonella, @estafilococos, @pseudomonas, @escherichiaColi, @coliformesTotales, @coliformesFecales, @observacion, @elaboradoPor, @aprobadoPor, @fechaCreacion)",
    "FtBuscarFichaTecnica": "SELECT TOP 1 * FROM prod_ficha_tecnica_test WHERE codigoDeProducto LIKE @codigoDeProducto",
    "FtEditarFichaTecnica": "UPDATE prod_ficha_tecnica_test SET descripcionDeProducto = @descripcionDeProducto, nombreDeProducto = @nombreDeProducto, descripcionLargaDeProducto = @descripcionLargaDeProducto, marca = @marca, destino = @destino, tipoDeUso = @tipoDeUso, alergeno = @alergeno, condicionAlmacenamiento = @condicionAlmacenamiento, vidaUtil = @vidaUtil, tipoDeEnvase = @tipoDeEnvase, presentacionDeEnvase = @presentacionDeEnvase, pesoPromedio = @pesoPromedio, unidadesPorCaja = @unidadesPorCaja, dimensiones = @dimensiones, idioma = @idioma, grasaVisible = @grasaVisible, espesorCobertura = @espesorCobertura, ganglios = @ganglios, hematomas = @hematomas, huesosCartilagos = @huesosCartilagos, elementosExtranos = @elementosExtranos, color = @color, olor = @olor, ph = @ph, aerobiosMesofilosTotales = @aerobiosMesofilosTotales, enterobacterias = @enterobacterias, stec0157 = @stec0157, stecNo0157 = @stecNo0157, salmonella = @salmonella, estafilococos = @estafilococos, pseudomonas = @pseudomonas, escherichiaColi = @escherichiaColi, coliformesTotales = @coliformesTotales, coliformesFecales = @coliformesFecales, observacion = @observacion, elaboradoPor = @elaboradoPor, aprobadoPor = @aprobadoPor, fechaCreacion = @fechaCreacion WHERE idFichaTecnica = @idFichaTecnica",
    "FtEliminarFichaTecnica": "DELETE FROM prod_ficha_tecnica_test WHERE idFichaTecnica = @idFichaTecnica",


    "FtListarProductos": "SELECT * FROM prod_producto_ficha_tecnica",
    "FtBuscarProducto": "SELECT * FROM prod_producto_ficha_tecnica WHERE codigoProducto = @codigoProducto",
    "FtEditarProducto": "UPDATE prod_producto_ficha_tecnica SET nombre = @Nombre, descripcion_producto_en_ficha = @NombreProductoEnFicha, calibre = @Calibre WHERE codigoProducto = @codigoProducto",

    "FtListaDeAspectosGenerales": "SELECT * FROM prod_plantilla_aspectos_generales",
    "FtCrearPlantillaAspectosGenerales": "INSERT INTO prod_plantilla_aspectos_generales (seccionDePlantilla, nombre, nombreDeProducto, idMarca, idTipoDeUso, idAlergeno, idCondicionAlmacenamiento, idVidaUtil, idTipoDeEnvase, idPresentacionDeEnvase, pesoPromedio, unidadesPorCaja, dimensiones) OUTPUT INSERTED.* VALUES (@seccionDePlantilla, @nombre, @nombreDeProducto, @idMarca, @idTipoDeUso, @idAlergeno, @idCondicionAlmacenamiento, @idVidaUtil, @idTipoDeEnvase, @idPresentacionDeEnvase, @pesoPromedio, @unidadesPorCaja, @dimensiones)",
    "FtBuscarPlantillaParaEditarAspectosGenerales": "SELECT TOP 1 * FROM prod_plantilla_aspectos_generales WHERE nombre LIKE @descripcionDePlantilla",
    "FtEditarPlantillaAspectosGenerales": "UPDATE prod_plantilla_aspectos_generales SET nombre = @Nombre, idMarca = @IdMarca, idTipoDeUso = @IdTipoDeUso, idAlergeno = @IdAlergeno, idCondicionAlmacenamiento = @IdCondicionAlmacenamiento, idVidaUtil = @IdVidaUtil, idTipoDeEnvase = @IdTipoDeEnvase, idPresentacionDeEnvase = @IdPresentacionDeEnvase, pesoPromedio = @PesoPromedio, unidadesPorCaja = @UnidadesPorCaja, dimensiones = @Dimensiones WHERE idPlantilla = @IdPlantilla",
    "FtBuscarPlantillaAspectosGenerales": "SELECT * FROM V_Aspectos_Generales_Ficha_Tecnica WHERE idPlantilla = @idPlantilla",

    "FtListaDeEspecificaciones": "SELECT * FROM prod_especificaciones_plantilla",
    "FtCrearPlantillaEspecificaciones": "INSERT INTO prod_especificaciones_plantilla (seccionDePlantilla, nombre, grasaVisible, espesorCobertura, ganglios, hematomas, huesosCartilagos, elementosExtraños, idColor, idOlor, idPh, aerobiosMesofilosTotales, enterobacterias, stec0157, stecNo0157, salmonella, estafilococos, pseudomonas, escherichiaColi, coliformesTotales, coliformesFecales) OUTPUT INSERTED.* VALUES (@seccionDePlantilla, @nombre, @grasaVisible, @espesorCobertura, @ganglios, @hematomas, @huesosCartilagos, @elementosExtraños, @idColor, @idOlor, @idPh, @aerobiosMesofilosTotales, @enterobacterias, @stec0157, @stecNo0157, @salmonella, @estafilococos, @pseudomonas, @escherichiaColi, @coliformesTotales, @coliformesFecales)",
    "FtBuscarPlantillaParaEditarEspecificaciones": "SELECT TOP 1 * FROM prod_especificaciones_plantilla WHERE nombre LIKE @nombreDePlantilla",
    "FtBuscarPlantillaEspecificaiones": "SELECT * FROM  V_Especificaciones_Ficha_Tecnica WHERE idPlantilla = @idPlantilla",
    "FtEditarPlantillaDeEspecificaciones": "UPDATE prod_especificaciones_plantilla SET seccionDePlantilla = @SeccionDePlantilla, nombre = @Nombre, grasaVisible = @GrasaVisible, espesorCobertura = @EspesorCobertura, ganglios = @Ganglios, hematomas = @Hematomas, huesosCartilagos = @HuesosCartilagos, elementosExtraños = @ElementosExtraños, idColor = @IdColor, idOlor = @IdOlor, idPh = @IdPh, aerobiosMesofilosTotales = @AerobiosMesofilosTotales, enterobacterias = @Enterobacterias, stec0157 = @Stec0157, stecNo0157 = @StecNo0157, salmonella = @Salmonella, estafilococos = @Estafilococos, pseudomonas = @Pseudomonas, escherichiaColi = @EscherichiaColi, coliformesTotales = @ColiformesTotales, coliformesFecales = @ColiformesFecales WHERE idPlantilla = @IdPlantilla;",

    "FtCrearImagenes": "INSERT INTO prod_imagenes_ficha_tecnica (codigoDeProducto, seccionDeImagen, imagen) OUTPUT INSERTED.* VALUES (@codigoDeProducto, @seccionDeImagen, @imagen)",
    "FtBuscarImagenFichaTecnica": "SELECT * FROM prod_imagenes_ficha_tecnica WHERE codigoDeProducto LIKE @codigoDeProducto",

    "FtCrearMArca": "INSERT INTO prod_marca (Nombre, Descripcion) OUTPUT INSERTED.IdMarca, INSERTED.Nombre, INSERTED.Descripcion VALUES (@Nombre, @Descripcion)",
    "FtEditarMarca": "UPDATE prod_marca SET Nombre = @Nombre, Descripcion = @Descripcion WHERE IdMarca = @IdMarca",
    "FtEliminarMarca": "DELETE FROM prod_marca WHERE IdMarca = @IdMarca",
    "FtListarMarcas": "SELECT * FROM prod_marca",

    "FtListarCondicionAlmacenamiento": "SELECT * FROM prod_condicion_almacenamiento",
    "FtCrearCondicionAlmacenamiento": "INSERT INTO prod_condicion_almacenamiento (nombre, descripcion) OUTPUT INSERTED.idCondicionAlmacenamiento, INSERTED.nombre, INSERTED.descripcion VALUES (@Nombre, @Descripcion)",
    "FtEditarCondicionAlmacenamiento": "UPDATE prod_condicion_almacenamiento SET nombre = @Nombre, descripcion = @Descripcion WHERE idCondicionAlmacenamiento = @IdCondicionAlmacenamiento",
    "FtEliminarCondicionAlmacenamiento": "DELETE FROM prod_condicion_almacenamiento WHERE idCondicionAlmacenamiento = @IdCondicionAlmacenamiento",

    "FtListarColores": "SELECT * FROM prod_color",
    "FtCrearColor": "INSERT INTO prod_color (Nombre, Descripcion) OUTPUT INSERTED.idColor, INSERTED.Nombre, INSERTED.Descripcion VALUES (@Nombre, @Descripcion)",
    "FtEditarColor": "UPDATE prod_color SET Nombre = @Nombre, Descripcion = @Descripcion WHERE idColor = @IdColor",
    "FtEliminarColor": "DELETE FROM prod_color WHERE idColor = @idColor",

    "FtListarDestinos": "SELECT * FROM prod_destino",
    "FtCrearDestinos": "INSERT INTO prod_destino (nombre, descripcion) OUTPUT INSERTED.* VALUES (@Nombre, @Descripcion)",
    "FtEditarDestinos": "UPDATE prod_destino SET nombre = @Nombre, descripcion = @Descripcion WHERE idDestino = @IdDestino",
    "FtEliminarDestinos": "DELETE FROM prod_destino WHERE idDestino = @IdDestino",

    "FtListarTiposDeUso": "SELECT * FROM prod_tipo_de_uso",
    "FtCrearTipoDeUso": "INSERT INTO prod_tipo_de_uso (Nombre, Descripcion) OUTPUT INSERTED.idTipoDeUso, INSERTED.Nombre, INSERTED.Descripcion VALUES (@Nombre, @Descripcion)",
    "FtEditarTipoDeUso": "UPDATE prod_tipo_de_uso SET Nombre = @Nombre, Descripcion = @Descripcion WHERE idTipoDeUso = @idTipoDeUso",
    "FtEliminarTipoDeUso": "DELETE FROM prod_tipo_de_uso WHERE idTipoDeUso = @idTipoDeUso",

    "FtListarOlores": "SELECT * FROM prod_olor",
    "FtCrearOlor": "INSERT INTO prod_olor (Nombre, Descripcion) OUTPUT INSERTED.idOlor, INSERTED.Nombre, INSERTED.Descripcion VALUES (@Nombre, @Descripcion)",
    "FtEditarOlor": "UPDATE prod_olor SET Nombre = @Nombre, Descripcion = @Descripcion WHERE idOlor = @idOlor",
    "FtEliminarOlor": "DELETE FROM prod_olor WHERE idOlor = @idOlor",

    "FtListarPh": "SELECT * FROM prod_ph",
    "FtCrearPh": "INSERT INTO prod_ph (Nombre, valor) OUTPUT INSERTED.idPh, INSERTED.Nombre, INSERTED.valor VALUES (@Nombre, @Valor)",
    "FtEditarPh": "UPDATE prod_ph SET Nombre = @Nombre, valor = @Valor WHERE idPh = @idPh",
    "FtEliminarPh": "DELETE FROM prod_ph WHERE idPh = @idPh",

    "FtListarAlergenos": "SELECT * FROM prod_alergenos",
    "FtCrearAlergenos": "INSERT INTO prod_alergenos (Nombre, Descripcion) OUTPUT INSERTED.IdAlergeno, INSERTED.Nombre, INSERTED.Descripcion VALUES (@Nombre, @Descripcion)",
    "FtEditarAlergenos": "UPDATE prod_alergenos SET Nombre = @Nombre, Descripcion = @Descripcion WHERE IdAlergeno = @IdAlergenos",
    "FtEliminarAlergenos": "DELETE FROM prod_alergenos WHERE IdAlergeno = @IdAlergenos",

    "FtListarVidaUtil": "SELECT * FROM prod_vida_util",
    "FtCrearVidaUtil": "INSERT INTO prod_vida_util (Nombre, duracion) OUTPUT INSERTED.idVidaUtil, INSERTED.Nombre, INSERTED.duracion VALUES (@Nombre, @Duracion)",
    "FtEditarVidaUtil": "UPDATE prod_vida_util SET Nombre = @Nombre, duracion = @Duracion WHERE idVidaUtil = @idVidaUtil",
    "FtEliminarVidaUtil": "DELETE FROM prod_vida_util WHERE idVidaUtil = @idVidaUtil",

    "FtListarTipoAlimentacion": "SELECT * FROM prod_alimentacion",
    "FtCrearTipoAlimentacion": "INSERT INTO prod_alimentacion (Nombre, Tipo) OUTPUT INSERTED.IdAlimentacion, INSERTED.Nombre, INSERTED.Tipo VALUES (@Nombre, @Tipo)",
    "FtEditarTipoAlimentacion": "UPDATE prod_alimentacion SET Nombre = @Nombre, Tipo = @Tipo WHERE IdAlimentacion = @IdAlimentacion",
    "FtEliminarTipoAlimentacion": "DELETE FROM prod_alimentacion WHERE IdAlimentacion = @IdAlimentacion",

    "FtListarTipoDeEnvase": "SELECT * FROM prod_tipo_de_envase",
    "FtCrearTipoDeEnvase": "INSERT INTO prod_tipo_de_envase (Nombre, Descripcion) OUTPUT INSERTED.IdTipoDeEnvase, INSERTED.Nombre, INSERTED.Descripcion VALUES (@Nombre, @Descripcion)",
    "FtEditarTipoDeEnvase": "UPDATE prod_tipo_de_envase SET Nombre = @Nombre, Descripcion = @Descripcion WHERE IdTipoDeEnvase = @IdTipoDeEnvase",
    "FtEliminarTipoDeEnvase": "DELETE FROM prod_tipo_de_envase WHERE IdTipoDeEnvase = @IdTipoDeEnvase",

    "FtListarPresentacionDeEnvase": "SELECT * FROM prod_presentacion_de_envase",
    "FtCrearPresentacionDeEnvase": "INSERT INTO prod_presentacion_de_envase (Nombre, Descripcion) OUTPUT INSERTED.IdPresentacionDeEnvase, INSERTED.Nombre, INSERTED.Descripcion VALUES (@Nombre, @Descripcion)",
    "FtEditarPresentacionDeEnvase": "UPDATE prod_presentacion_de_envase SET Nombre = @Nombre, Descripcion = @Descripcion WHERE IdPresentacionDeEnvase = @IdPresentacionDeEnvase",
    "FtEliminarPresentacionDeEnvase": "DELETE FROM prod_presentacion_de_envase WHERE IdPresentacionDeEnvase = @IdPresentacionDeEnvase",

    "FtListarIdiomas": "SELECT * FROM prod_idiomas"

  },

  "Rendimientos": {
    "GetCortesPorLoteYFecha": "exec SIR_CortesPorLoteYFecha @fechaProduccionDesde, @fechaProduccionHasta, @lotesStr",
    "GetConfigTipoRendimiento": "select * from conf_tipo_rendimiento where activo = 1",
    "GetLotesPorTipo": "select lote from conf_lote_tipo_rendimiento where idTipo = @idTipo and activo = 1",
    "GetLotesActivos": "select idTipo, lote from conf_lote_tipo_rendimiento where activo = 1"
  },

  "DashboardFichaTecnica": {
    "GetProductosOrdenesActivas": "select distinct mat.code, mat.name from proc_prunitorders pro inner join proc_orders o on pro.[order] = o.[order] inner join proc_orderl ol with(nolock) on o.[order] = ol.[order] inner join proc_materials mat with(nolock) on ol.material = mat.material where mat.code not like 'C%' and o.orderstatus = 4 order by mat.code asc;",
    "TiempoProductoActivo": 10000,
    "TiempoActualizacionDashboard":  300000
  },

  "RutaCarpetaTropas": "\\\\SDATA\\Of. Produccion\\Producción\\CONTROL pH\\archivo\\",
  "RutaCarpetaViejo": "\\\\sdata\\Of. Produccion\\FAENAS PRODUCCIONES\\",
  "RutaCarpetaNuevo": "\\\\sdata\\Of. Produccion\\RESPALDO ANIBAL\\",
  "NombreLibroNuevo": "CUARTOS.xlsx",
  "RutaCarpetaCuartos": "\\\\sdata\\Of. Produccion\\",
  "NombreHojaOvino": "PROGRAMA DESOSADOS OVINOS",
  "NombreHojaNuevo": "PROGRAMA DESOSADOS VACUNOS",
  "NombreHojaCasaViejo": "PRODUCCIONES",

  "Email": {
    "Host": "correo.flp.uy",
    "Port": "25000",
    "UserName": "gsilvera@flp.uy",
    "Password": "",
    "SSL": false
  }
}